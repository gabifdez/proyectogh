# -*- coding: utf-8 -*-
"""Untitled4.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1874I1NBOurrgBANBTDeXlvY5C4u8U70H
"""

!pip install pandas
import pandas as pd
import pandas as pd

import pandas as pd

from google.colab import drive
drive.mount('/content/drive')

drive.mount("/content/drive", force_remount=True)

import requests
url = 'https://drive.google.com/drive/folders/1898uxiUURdUzIfih30AttUiE3A5VCHm9'

import requests

# Reemplaza 'ID_DEL_ARCHIVO' con el ID correcto de tu archivo
file_id = '1898uxiUURdUzIfih30AttUiE3A5VCHm9'

# Construye la URL de descarga directa
url = f'https://drive.google.com/uc?id={file_id}'

# Realiza la solicitud y guarda el archivo
response = requests.get(url)

# Reemplaza 'nombre_del_archivo.ext' con el nombre deseado del archivo y su extensión
with open('datos.csv', 'wb') as file:
    file.write(response.content)

import os

if os.path.exists('archivo.csv'):
    print('Descarga exitosa')
else:
    print('No se pudo descargar el archivo')

import pandas as pd

# Crear un DataFrame con los nuevos datos
data = {
    'Participante': ['Fernando', 'Maite', 'Lucas', 'Jennifer', 'Fran', 'Hans', 'Jorge', 'Monica', 'Ariel', 'Alessia', 'Ruben', 'Scarleth', 'Trinidad', 'Benja', 'Cony', 'Viviana', 'Francisco', 'Estefy', 'Junior Playboy', 'Eva Gómez', 'Pamela Díaz', 'Jhonatan Mujica', 'La Guaren', 'El futuro fuera de orbita', 'Azzart Meveth', 'Camilisima', 'Miguelito', 'Shirley Arica', 'Camila Arismedi', 'Fabio Agostini', 'Simon de la costa', 'Luis Mateucci'],
    'Reality': ['GH', 'GH', 'GH', 'GH', 'GH', 'GH', 'GH', 'GH', 'GH', 'GH', 'GH', 'GH', 'GH', 'GH', 'GH', 'GH', 'GH', 'GH', 'TB', 'TB', 'TB', 'TB', 'TB', 'TB', 'TB', 'TB', 'TB', 'TB', 'TB', 'TB', 'TB', 'TB'],
    'Likes': [1858, 2410, 5387, 2870, 8144, 3067, 1374, 4892, 2335, 5516, 1877, 6148, 1548, 2504, 2244, 2324, 919, 2889, 28200, 15300, 33200, 5081, 17900, 21700, 1966, 3321, 3452, 2408, 3850, 4793, 13600, 16200 ],
    'Comentarios': [132, 165, 648, 448, 1091, 184, 185, 351, 173, 235, 165, 621, 446, 298, 136, 164, 149, 281, 2448, 528, 975, 255, 2409, 867, 60, 122, 108, 362, 316, 280, 1768, 978 ]
}

df = pd.DataFrame(data)

# Mostrar las primeras filas de los datos
print(df)

# Resumen estadístico de las columnas numéricas
print(df.describe())

# Total de likes y comentarios por reality
total_por_reality = df.groupby('Reality')[['Likes', 'Comentarios']].sum()
print(total_por_reality)

# Visualización (puedes usar bibliotecas de visualización como Matplotlib o Seaborn)
import matplotlib.pyplot as plt

# Ordenar el DataFrame por 'Likes' de más a menos
df_likes = df.sort_values(by='Likes', ascending=False)

# Ordenar el DataFrame por 'Comentarios' de más a menos
df_comentarios = df.sort_values(by='Comentarios', ascending=False)

print("Tabla ordenada por Likes (de más a menos):")
print(df_likes.head())

print("\nTabla ordenada por Comentarios (de más a menos):")
print(df_comentarios.head())

# Ordenar el DataFrame por 'Likes' de mayor a menor
df_likes = df.sort_values(by='Likes', ascending=False)


# Ordenar el DataFrame por 'Comentarios' de mayor a menor
df_comentarios = df.sort_values(by='Comentarios', ascending=False)

print("Tabla ordenada por Likes (de mayor a menor):")
print(df_likes)

print("\nTabla ordenada por Comentarios (de mayor a menor):")
print(df_comentarios)

# Ordenar los DataFrames por Likes y Comentarios de mayor a menor
df_likes.sort_values(by='Likes', ascending=False, inplace=True)
df_comentarios.sort_values(by='Comentarios', ascending=False, inplace=True)

# Tomar los top 5 de ambas tablas
top_5_likes = df_likes.head(5)
top_5_comentarios = df_comentarios.head(5)

# Imprimir los resultados
print("Top 5 por Likes:")
print(top_5_likes)

print("\nTop 5 por Comentarios:")
print(top_5_comentarios)